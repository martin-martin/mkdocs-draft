{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Calculation Docs This is some auto-generated documentation using MkDocs, Python, and some other fluff. Learn more about calculations below. Auto-Generated Docs Provide several sample math calculations. add ( a , b ) Return the sum of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: sum of the first and the second number Source code in calculator/calculations.py def add ( a : float , b : float ) -> float : \"\"\"Return the sum of two numbers. Args: a (float): first number b (float): second number Returns: float: sum of the first and the second number \"\"\" return a + b divide ( a , b ) Return the quotient of two numbers. Parameters: Name Type Description Default a float dividend required b float divisor required Exceptions: Type Description ZeroDivisionError gets raised when the divisor is 0 Returns: Type Description float float: the quotient Source code in calculator/calculations.py def divide ( a : float , b : float ) -> float : \"\"\"Return the quotient of two numbers. Args: a (float): dividend b (float): divisor Raises: ZeroDivisionError: gets raised when the divisor is `0` Returns: float: the quotient \"\"\" if b == 0 : raise ZeroDivisionError ( \"division by zero\" ) return a / b multiply ( a , b ) Return the product of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: the product of the first number multiplied with the second number Source code in calculator/calculations.py def multiply ( a : float , b : float ) -> float : \"\"\"Return the product of two numbers. Args: a (float): first number b (float): second number Returns: float: the product of the first number multiplied with the second number \"\"\" return a * b power ( base , exponent = 2 ) Return base to the power of exponent. Parameters: Name Type Description Default base float the base number required exponent float the exponent used. Defaults to 2. 2 Returns: Type Description float float: the result of taking the base to the exponent Source code in calculator/calculations.py def power ( base : float , exponent : float = 2 ) -> float : \"\"\"Return base to the power of exponent. Args: base (float): the base number exponent (float, optional): the exponent used. Defaults to 2. Returns: float: the result of taking the base to the exponent \"\"\" return base ** exponent sqrt ( a ) Return the square root of a. Parameters: Name Type Description Default a float the number that you want to take the square root from required Exceptions: Type Description ValueError raises if a is below 0 Returns: Type Description float float: the square root of a Source code in calculator/calculations.py def sqrt ( a : float ) -> float : \"\"\"Return the square root of a. Args: a (float): the number that you want to take the square root from Raises: ValueError: raises if `a` is below `0` Returns: float: the square root of `a` \"\"\" if a < 0 : raise ValueError ( \"math domain error\" ) return a ** ( 1 / 2 ) substract ( a , b ) Return the difference of two numbers. Parameters: Name Type Description Default a float minuend required b float subtrahend required Returns: Type Description float float: the difference between the minuend minus the subtrahend Source code in calculator/calculations.py def substract ( a : float , b : float ) -> float : \"\"\"Return the difference of two numbers. Args: a (float): minuend b (float): subtrahend Returns: float: the difference between the minuend minus the subtrahend \"\"\" return a - b Acknowledgements I want to thank my house plants for providing me with a negligible amount of oxygen each day. Also, the sun for taking over half of the nourishing requirements free-of-charge.","title":"Calculation Docs"},{"location":"#calculation-docs","text":"This is some auto-generated documentation using MkDocs, Python, and some other fluff. Learn more about calculations below.","title":"Calculation Docs"},{"location":"#auto-generated-docs","text":"Provide several sample math calculations.","title":"Auto-Generated Docs"},{"location":"#calculator.calculations.add","text":"Return the sum of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: sum of the first and the second number Source code in calculator/calculations.py def add ( a : float , b : float ) -> float : \"\"\"Return the sum of two numbers. Args: a (float): first number b (float): second number Returns: float: sum of the first and the second number \"\"\" return a + b","title":"add()"},{"location":"#calculator.calculations.divide","text":"Return the quotient of two numbers. Parameters: Name Type Description Default a float dividend required b float divisor required Exceptions: Type Description ZeroDivisionError gets raised when the divisor is 0 Returns: Type Description float float: the quotient Source code in calculator/calculations.py def divide ( a : float , b : float ) -> float : \"\"\"Return the quotient of two numbers. Args: a (float): dividend b (float): divisor Raises: ZeroDivisionError: gets raised when the divisor is `0` Returns: float: the quotient \"\"\" if b == 0 : raise ZeroDivisionError ( \"division by zero\" ) return a / b","title":"divide()"},{"location":"#calculator.calculations.multiply","text":"Return the product of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: the product of the first number multiplied with the second number Source code in calculator/calculations.py def multiply ( a : float , b : float ) -> float : \"\"\"Return the product of two numbers. Args: a (float): first number b (float): second number Returns: float: the product of the first number multiplied with the second number \"\"\" return a * b","title":"multiply()"},{"location":"#calculator.calculations.power","text":"Return base to the power of exponent. Parameters: Name Type Description Default base float the base number required exponent float the exponent used. Defaults to 2. 2 Returns: Type Description float float: the result of taking the base to the exponent Source code in calculator/calculations.py def power ( base : float , exponent : float = 2 ) -> float : \"\"\"Return base to the power of exponent. Args: base (float): the base number exponent (float, optional): the exponent used. Defaults to 2. Returns: float: the result of taking the base to the exponent \"\"\" return base ** exponent","title":"power()"},{"location":"#calculator.calculations.sqrt","text":"Return the square root of a. Parameters: Name Type Description Default a float the number that you want to take the square root from required Exceptions: Type Description ValueError raises if a is below 0 Returns: Type Description float float: the square root of a Source code in calculator/calculations.py def sqrt ( a : float ) -> float : \"\"\"Return the square root of a. Args: a (float): the number that you want to take the square root from Raises: ValueError: raises if `a` is below `0` Returns: float: the square root of `a` \"\"\" if a < 0 : raise ValueError ( \"math domain error\" ) return a ** ( 1 / 2 )","title":"sqrt()"},{"location":"#calculator.calculations.substract","text":"Return the difference of two numbers. Parameters: Name Type Description Default a float minuend required b float subtrahend required Returns: Type Description float float: the difference between the minuend minus the subtrahend Source code in calculator/calculations.py def substract ( a : float , b : float ) -> float : \"\"\"Return the difference of two numbers. Args: a (float): minuend b (float): subtrahend Returns: float: the difference between the minuend minus the subtrahend \"\"\" return a - b","title":"substract()"},{"location":"#acknowledgements","text":"I want to thank my house plants for providing me with a negligible amount of oxygen each day. Also, the sun for taking over half of the nourishing requirements free-of-charge.","title":"Acknowledgements"},{"location":"explanation/","text":"","title":"Explanation"},{"location":"how-to-guide/","text":"","title":"How to guide"},{"location":"reference/","text":"Provide several sample math calculations. add ( a , b ) Return the sum of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: sum of the first and the second number Source code in calculator/calculations.py def add ( a : float , b : float ) -> float : \"\"\"Return the sum of two numbers. Args: a (float): first number b (float): second number Returns: float: sum of the first and the second number \"\"\" return a + b divide ( a , b ) Return the quotient of two numbers. Parameters: Name Type Description Default a float dividend required b float divisor required Exceptions: Type Description ZeroDivisionError gets raised when the divisor is 0 Returns: Type Description float float: the quotient Source code in calculator/calculations.py def divide ( a : float , b : float ) -> float : \"\"\"Return the quotient of two numbers. Args: a (float): dividend b (float): divisor Raises: ZeroDivisionError: gets raised when the divisor is `0` Returns: float: the quotient \"\"\" if b == 0 : raise ZeroDivisionError ( \"division by zero\" ) return a / b multiply ( a , b ) Return the product of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: the product of the first number multiplied with the second number Source code in calculator/calculations.py def multiply ( a : float , b : float ) -> float : \"\"\"Return the product of two numbers. Args: a (float): first number b (float): second number Returns: float: the product of the first number multiplied with the second number \"\"\" return a * b power ( base , exponent = 2 ) Return base to the power of exponent. Parameters: Name Type Description Default base float the base number required exponent float the exponent used. Defaults to 2. 2 Returns: Type Description float float: the result of taking the base to the exponent Source code in calculator/calculations.py def power ( base : float , exponent : float = 2 ) -> float : \"\"\"Return base to the power of exponent. Args: base (float): the base number exponent (float, optional): the exponent used. Defaults to 2. Returns: float: the result of taking the base to the exponent \"\"\" return base ** exponent sqrt ( a ) Return the square root of a. Parameters: Name Type Description Default a float the number that you want to take the square root from required Exceptions: Type Description ValueError raises if a is below 0 Returns: Type Description float float: the square root of a Source code in calculator/calculations.py def sqrt ( a : float ) -> float : \"\"\"Return the square root of a. Args: a (float): the number that you want to take the square root from Raises: ValueError: raises if `a` is below `0` Returns: float: the square root of `a` \"\"\" if a < 0 : raise ValueError ( \"math domain error\" ) return a ** ( 1 / 2 ) substract ( a , b ) Return the difference of two numbers. Parameters: Name Type Description Default a float minuend required b float subtrahend required Returns: Type Description float float: the difference between the minuend minus the subtrahend Source code in calculator/calculations.py def substract ( a : float , b : float ) -> float : \"\"\"Return the difference of two numbers. Args: a (float): minuend b (float): subtrahend Returns: float: the difference between the minuend minus the subtrahend \"\"\" return a - b","title":"Reference"},{"location":"reference/#calculator.calculations.add","text":"Return the sum of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: sum of the first and the second number Source code in calculator/calculations.py def add ( a : float , b : float ) -> float : \"\"\"Return the sum of two numbers. Args: a (float): first number b (float): second number Returns: float: sum of the first and the second number \"\"\" return a + b","title":"add()"},{"location":"reference/#calculator.calculations.divide","text":"Return the quotient of two numbers. Parameters: Name Type Description Default a float dividend required b float divisor required Exceptions: Type Description ZeroDivisionError gets raised when the divisor is 0 Returns: Type Description float float: the quotient Source code in calculator/calculations.py def divide ( a : float , b : float ) -> float : \"\"\"Return the quotient of two numbers. Args: a (float): dividend b (float): divisor Raises: ZeroDivisionError: gets raised when the divisor is `0` Returns: float: the quotient \"\"\" if b == 0 : raise ZeroDivisionError ( \"division by zero\" ) return a / b","title":"divide()"},{"location":"reference/#calculator.calculations.multiply","text":"Return the product of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: the product of the first number multiplied with the second number Source code in calculator/calculations.py def multiply ( a : float , b : float ) -> float : \"\"\"Return the product of two numbers. Args: a (float): first number b (float): second number Returns: float: the product of the first number multiplied with the second number \"\"\" return a * b","title":"multiply()"},{"location":"reference/#calculator.calculations.power","text":"Return base to the power of exponent. Parameters: Name Type Description Default base float the base number required exponent float the exponent used. Defaults to 2. 2 Returns: Type Description float float: the result of taking the base to the exponent Source code in calculator/calculations.py def power ( base : float , exponent : float = 2 ) -> float : \"\"\"Return base to the power of exponent. Args: base (float): the base number exponent (float, optional): the exponent used. Defaults to 2. Returns: float: the result of taking the base to the exponent \"\"\" return base ** exponent","title":"power()"},{"location":"reference/#calculator.calculations.sqrt","text":"Return the square root of a. Parameters: Name Type Description Default a float the number that you want to take the square root from required Exceptions: Type Description ValueError raises if a is below 0 Returns: Type Description float float: the square root of a Source code in calculator/calculations.py def sqrt ( a : float ) -> float : \"\"\"Return the square root of a. Args: a (float): the number that you want to take the square root from Raises: ValueError: raises if `a` is below `0` Returns: float: the square root of `a` \"\"\" if a < 0 : raise ValueError ( \"math domain error\" ) return a ** ( 1 / 2 )","title":"sqrt()"},{"location":"reference/#calculator.calculations.substract","text":"Return the difference of two numbers. Parameters: Name Type Description Default a float minuend required b float subtrahend required Returns: Type Description float float: the difference between the minuend minus the subtrahend Source code in calculator/calculations.py def substract ( a : float , b : float ) -> float : \"\"\"Return the difference of two numbers. Args: a (float): minuend b (float): subtrahend Returns: float: the difference between the minuend minus the subtrahend \"\"\" return a - b","title":"substract()"},{"location":"tutorial/","text":"","title":"Tutorial"}]}