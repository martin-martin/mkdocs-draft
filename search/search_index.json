{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Calculation Docs This site contains the project documentation for the calculator project that is a toy module used in the Real Python tutorial Document Your Python Project with MkDocs . Its aim is to give you a framework to build your project documentation using Python, MkDocs, mkdocstrings , and mkdocs-material . Table Of Contents This documentation follows the best practice for project documentation as described by Daniele Procida in the documentation system . Tutorial How-To Guide Reference Explanation Project Overview A module used to make basic calculations. add(a: float, b: float) -> float : Return the sum of two numbers. subtract(a: float, b: float) -> float : Return the difference of two numbers. multiply(a: float, b: float) -> float : Return the product of two numbers. divide(a: float, b: float) -> float : Return the quotient of two numbers. power(base: float, exponent: float = 2) -> float : Return base to the power of exponent. sqrt(a: float) -> float : Return the square root of a. Acknowledgements I want to thank my house plants for providing me with a negligible amount of oxygen each day. Also, I want to thank the sun for providing more than half of the nourishment free-of-charge.","title":"Home"},{"location":"#calculation-docs","text":"This site contains the project documentation for the calculator project that is a toy module used in the Real Python tutorial Document Your Python Project with MkDocs . Its aim is to give you a framework to build your project documentation using Python, MkDocs, mkdocstrings , and mkdocs-material .","title":"Calculation Docs"},{"location":"#table-of-contents","text":"This documentation follows the best practice for project documentation as described by Daniele Procida in the documentation system . Tutorial How-To Guide Reference Explanation","title":"Table Of Contents"},{"location":"#project-overview","text":"A module used to make basic calculations. add(a: float, b: float) -> float : Return the sum of two numbers. subtract(a: float, b: float) -> float : Return the difference of two numbers. multiply(a: float, b: float) -> float : Return the product of two numbers. divide(a: float, b: float) -> float : Return the quotient of two numbers. power(base: float, exponent: float = 2) -> float : Return base to the power of exponent. sqrt(a: float) -> float : Return the square root of a.","title":"Project Overview"},{"location":"#acknowledgements","text":"I want to thank my house plants for providing me with a negligible amount of oxygen each day. Also, I want to thank the sun for providing more than half of the nourishment free-of-charge.","title":"Acknowledgements"},{"location":"explanation/","text":"Explanation This part of the project documentation focuses on a understanding-oriented approach. You'll get a chance to read about the background of the project, as well as reasoning about how it was implemented. Note: Expand this section by considering the following points: giving context/background explaining why multiple examples, alternative approaches making connections no instructions or technical descriptions","title":"Explanation"},{"location":"explanation/#explanation","text":"This part of the project documentation focuses on a understanding-oriented approach. You'll get a chance to read about the background of the project, as well as reasoning about how it was implemented. Note: Expand this section by considering the following points: giving context/background explaining why multiple examples, alternative approaches making connections no instructions or technical descriptions","title":"Explanation"},{"location":"how-to-guide/","text":"How-To Guide This part of the project documentation focuses on a problem-oriented approach. You'll tackle common tasks that you might have with the help of the code provided in this project. How To Add Two Numbers? You have two numbers and you need to add them together. You're in luck! The calculator package can help you get this done. Download the code from this GitHub repository and place the calculator/ folder in the same directory as your Python script: your_project/ \u2502 \u251c\u2500\u2500 calculator/ \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 calculations.py \u2502 \u2514\u2500\u2500 your_script.py Inside of your_script.py you can now import the add() function from the calculator.calculations module: # your_script.py from calculator.calculations import add After you've imported the function, you can use it to add any two numbers that you need to add: # your_script.py from calculator.calculations import add print(add(20, 22)) # OUTPUT: 42 Using only one import statement, you're now able to add any two numbers.","title":"How-To Guide"},{"location":"how-to-guide/#how-to-guide","text":"This part of the project documentation focuses on a problem-oriented approach. You'll tackle common tasks that you might have with the help of the code provided in this project.","title":"How-To Guide"},{"location":"how-to-guide/#how-to-add-two-numbers","text":"You have two numbers and you need to add them together. You're in luck! The calculator package can help you get this done. Download the code from this GitHub repository and place the calculator/ folder in the same directory as your Python script: your_project/ \u2502 \u251c\u2500\u2500 calculator/ \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 calculations.py \u2502 \u2514\u2500\u2500 your_script.py Inside of your_script.py you can now import the add() function from the calculator.calculations module: # your_script.py from calculator.calculations import add After you've imported the function, you can use it to add any two numbers that you need to add: # your_script.py from calculator.calculations import add print(add(20, 22)) # OUTPUT: 42 Using only one import statement, you're now able to add any two numbers.","title":"How To Add Two Numbers?"},{"location":"reference/","text":"Reference This part of the project documentation focuses on an information-oriented approach. Use it as a reference for the technical implementation of the calculator project code. Provide several sample math calculations. This script allows the user to print to make mathematical calculations. This file can also be imported as a module and contains the following functions: add - returns the sum of two numbers subtract - returns the difference of two numbers multiply - returns the product of two numbers divide - returns the quotient of two numbers power - returns the base to the power of the exponent sqrt - returns the square root of a number add ( a , b ) Return the sum of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: sum of the first and the second number Source code in calculator/calculations.py def add ( a : float , b : float ) -> float : \"\"\"Return the sum of two numbers. Args: a (float): first number b (float): second number Returns: float: sum of the first and the second number \"\"\" return a + b divide ( a , b ) Return the quotient of two numbers. Parameters: Name Type Description Default a float dividend required b float divisor required Exceptions: Type Description ZeroDivisionError gets raised when the divisor is 0 Returns: Type Description float float: the quotient Source code in calculator/calculations.py def divide ( a : float , b : float ) -> float : \"\"\"Return the quotient of two numbers. Args: a (float): dividend b (float): divisor Raises: ZeroDivisionError: gets raised when the divisor is `0` Returns: float: the quotient \"\"\" if b == 0 : raise ZeroDivisionError ( \"division by zero\" ) return a / b multiply ( a , b ) Return the product of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: the product of the two numbers Source code in calculator/calculations.py def multiply ( a : float , b : float ) -> float : \"\"\"Return the product of two numbers. Args: a (float): first number b (float): second number Returns: float: the product of the two numbers \"\"\" return a * b power ( base , exponent = 2 ) Return base to the power of exponent. Parameters: Name Type Description Default base float the base number required exponent float the exponent used. Defaults to 2 2 Returns: Type Description float float: the result of taking the base to the exponent Source code in calculator/calculations.py def power ( base : float , exponent : float = 2 ) -> float : \"\"\"Return base to the power of exponent. Args: base (float): the base number exponent (float, optional): the exponent used. Defaults to 2 Returns: float: the result of taking the base to the exponent \"\"\" return base ** exponent sqrt ( a ) Return the square root of a. Parameters: Name Type Description Default a float the number that you want to take the square root of required Exceptions: Type Description ValueError raises if a is below 0 Returns: Type Description float float: the square root of a Source code in calculator/calculations.py def sqrt ( a : float ) -> float : \"\"\"Return the square root of a. Args: a (float): the number that you want to take the square root of Raises: ValueError: raises if `a` is below `0` Returns: float: the square root of `a` \"\"\" if a < 0 : raise ValueError ( \"math domain error\" ) return a ** ( 1 / 2 ) subtract ( a , b ) Return the difference of two numbers. Parameters: Name Type Description Default a float minuend required b float subtrahend required Returns: Type Description float float: the difference between the minuend minus the subtrahend Source code in calculator/calculations.py def subtract ( a : float , b : float ) -> float : \"\"\"Return the difference of two numbers. Args: a (float): minuend b (float): subtrahend Returns: float: the difference between the minuend minus the subtrahend \"\"\" return a - b","title":"Reference"},{"location":"reference/#reference","text":"This part of the project documentation focuses on an information-oriented approach. Use it as a reference for the technical implementation of the calculator project code. Provide several sample math calculations. This script allows the user to print to make mathematical calculations. This file can also be imported as a module and contains the following functions: add - returns the sum of two numbers subtract - returns the difference of two numbers multiply - returns the product of two numbers divide - returns the quotient of two numbers power - returns the base to the power of the exponent sqrt - returns the square root of a number","title":"Reference"},{"location":"reference/#calculator.calculations.add","text":"Return the sum of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: sum of the first and the second number Source code in calculator/calculations.py def add ( a : float , b : float ) -> float : \"\"\"Return the sum of two numbers. Args: a (float): first number b (float): second number Returns: float: sum of the first and the second number \"\"\" return a + b","title":"add()"},{"location":"reference/#calculator.calculations.divide","text":"Return the quotient of two numbers. Parameters: Name Type Description Default a float dividend required b float divisor required Exceptions: Type Description ZeroDivisionError gets raised when the divisor is 0 Returns: Type Description float float: the quotient Source code in calculator/calculations.py def divide ( a : float , b : float ) -> float : \"\"\"Return the quotient of two numbers. Args: a (float): dividend b (float): divisor Raises: ZeroDivisionError: gets raised when the divisor is `0` Returns: float: the quotient \"\"\" if b == 0 : raise ZeroDivisionError ( \"division by zero\" ) return a / b","title":"divide()"},{"location":"reference/#calculator.calculations.multiply","text":"Return the product of two numbers. Parameters: Name Type Description Default a float first number required b float second number required Returns: Type Description float float: the product of the two numbers Source code in calculator/calculations.py def multiply ( a : float , b : float ) -> float : \"\"\"Return the product of two numbers. Args: a (float): first number b (float): second number Returns: float: the product of the two numbers \"\"\" return a * b","title":"multiply()"},{"location":"reference/#calculator.calculations.power","text":"Return base to the power of exponent. Parameters: Name Type Description Default base float the base number required exponent float the exponent used. Defaults to 2 2 Returns: Type Description float float: the result of taking the base to the exponent Source code in calculator/calculations.py def power ( base : float , exponent : float = 2 ) -> float : \"\"\"Return base to the power of exponent. Args: base (float): the base number exponent (float, optional): the exponent used. Defaults to 2 Returns: float: the result of taking the base to the exponent \"\"\" return base ** exponent","title":"power()"},{"location":"reference/#calculator.calculations.sqrt","text":"Return the square root of a. Parameters: Name Type Description Default a float the number that you want to take the square root of required Exceptions: Type Description ValueError raises if a is below 0 Returns: Type Description float float: the square root of a Source code in calculator/calculations.py def sqrt ( a : float ) -> float : \"\"\"Return the square root of a. Args: a (float): the number that you want to take the square root of Raises: ValueError: raises if `a` is below `0` Returns: float: the square root of `a` \"\"\" if a < 0 : raise ValueError ( \"math domain error\" ) return a ** ( 1 / 2 )","title":"sqrt()"},{"location":"reference/#calculator.calculations.subtract","text":"Return the difference of two numbers. Parameters: Name Type Description Default a float minuend required b float subtrahend required Returns: Type Description float float: the difference between the minuend minus the subtrahend Source code in calculator/calculations.py def subtract ( a : float , b : float ) -> float : \"\"\"Return the difference of two numbers. Args: a (float): minuend b (float): subtrahend Returns: float: the difference between the minuend minus the subtrahend \"\"\" return a - b","title":"subtract()"},{"location":"tutorial/","text":"Tutorial This part of the project documentation focuses on a learning-oriented approach. You'll learn how to get started working with the code in this project. Note: Expand this section by considering the following points: learning by doing getting started inspiring confidence --> must work for everyone, repeatably repeatability immediate sense of achievement concreteness, not abstraction minimum necessary explanation no distractions","title":"Tutorial"},{"location":"tutorial/#tutorial","text":"This part of the project documentation focuses on a learning-oriented approach. You'll learn how to get started working with the code in this project. Note: Expand this section by considering the following points: learning by doing getting started inspiring confidence --> must work for everyone, repeatably repeatability immediate sense of achievement concreteness, not abstraction minimum necessary explanation no distractions","title":"Tutorial"}]}